---
import { redirect } from "react-router-dom";
import Layout from "../components/Layout.astro";
import { accessTokenName, refreshTokenName } from "../utils/config";

import { locale } from "../utils/locale";

import { supabase } from "../utils/supabaseBrowser";

type FormText = {
  buttonText: string;
  confirm?: string;
  error?: string;
};

const formText: FormText = {
  buttonText: locale.update_password?.button_label ?? "Submit",
  confirm: undefined,
  error: undefined,
};

if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();

    const password = data.get("password");

    if (typeof password === "string") {
      formText.buttonText =
        locale.update_password?.loading_button_label ?? "Loading";
      const { error } = await supabase.auth.updateUser({
        password: password,
      });
      formText.buttonText = locale.update_password?.button_label ?? "Submit";
      if (error) {
        formText.error = error.message;
      } else {
        return Astro.redirect("/updated");
      }
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<Layout title="update">
  <div
    style={{
      display: "flex",
      alignItems: "stretch",
      justifyContent: "center",
    }}
  >
    <form
      method="post"
      style={{
        boxShadow: "1px 1px 3px #ccc",
        borderRadius: "8px",
        padding: "20px",
        display: "flex",
        flexDirection: "column",
        justifyContent: "center",
        maxWidth: "35rem",
        gap: "1rem",
      }}
    >
      <label
        style={{
          display: "flex",
          flexDirection: "column",
        }}
      >
        {locale.update_password?.password_label}
        <input id="password" name="password" type="password" required />
      </label>
      <button
        type="submit"
        style={{
          backgroundColor: "var(--accent)",
          border: "none",
          padding: "6px 10px",
          fontSize: "large",
          color: "white",
          cursor: "pointer",
          borderRadius: "6px",
        }}
      >
        <span>{formText.buttonText}</span>
      </button>
      {formText.error && <label>{formText.error}</label>}
      {formText.confirm && <label>{formText.confirm}</label>}
    </form>
  </div>
</Layout>
<script>
  import { supabase } from "../utils/supabaseBrowser";
  const params = new URL(location.href).searchParams;
  const access_token = params.get("access_token");
  const refresh_token = params.get("refresh_token");
  if (access_token && refresh_token)
    supabase.auth.setSession({
      access_token,
      refresh_token,
    });
</script>
